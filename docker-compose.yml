version: '3.8'

services:
  postgresqldb:
    image: postgres:15
    container_name: reportingapi_postgresqldb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgresqldb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - reporting-network

  reportingapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reportingapi_app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresqldb:5432/postgresqldb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL-AUTO: create-drop
      SPRING_SQL_INIT_MODE: always
      SPRING_JPA_DEFER-DATASOURCE-INITIALIZATION: "true"
      SPRING_JPA_SHOW-SQL: "true"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SQL: DEBUG
    depends_on:
      postgresqldb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - reporting-network

networks:
  reporting-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
